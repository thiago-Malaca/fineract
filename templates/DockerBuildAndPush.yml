parameters:
  - name: containerRegistry
    type: string
    default: 
  - name: repository
    type: string
    default: 
  - name: tag
    type: string
    default: 
  - name: dockerfileBackend
    type: string
    default: 

steps:
  - task: Docker@2
    displayName: 'Build Docker Container'
    inputs:
      # dockerRegistryServiceConnection: ${{ parameters.dockerRegistryServiceConnection }}
      containerRegistry: ${{ parameters.containerRegistry }}
      repository: ${{ parameters.repository }}
      command: 'build'
      # Dockerfile: '**/${{ parameters.artifactName }}/${{ parameters.artifactName }}/Dockerfile'
      Dockerfile: ${{ parameters.dockerfileBackend }}
      # buildContext: ${{ parameters.artifactName }}
      # tags: |
      #   latest
      tags: |      
        ${{ parameters.tag }}
        latest
      # arguments: '--build-arg BuildId=${{ parameters.buildId }} --build-arg PAT=${{ parameters.patMicroserviceDemoNugetsFeed }}'

  - task: Docker@2
    displayName: 'Push Docker Container'
    inputs:
      containerRegistry: ${{ parameters.containerRegistry }}
      repository: ${{ parameters.repository }}
      command: 'push'
      tags: |      
        ${{ parameters.tag }}            

  - task: Docker@2
    displayName: 'Push Docker Container'
    inputs:
      containerRegistry: ${{ parameters.containerRegistry }}
      repository: ${{ parameters.repository }}
      command: 'push'
      tags: |              
        latest
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))