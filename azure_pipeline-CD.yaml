name: Fineract_$(Date:yyyyMMdd)$(Rev:.r)
trigger: none

resources:
  pipelines:
   - pipeline: fineractBuild
     source: fineract-CI
     trigger:
      branches:
       include:
         - master
         - develop
         - pull/*
         - refs/pull/*

pool:
  vmImage: ubuntu-latest

variables:
  AzureSubscription: 'Azure Service Connection'
  ClusterResourceGroup: MSF-AKS-Nao-Produtivo-RG
  AksClusterName: msf-aks
  HelmVersion: 3.5.0
  ApiName: 'fineract'
  ChartPackage: '$(Pipeline.Workspace)/fineractBuild/$(ApiName)/fineract-$(resources.pipeline.fineractBuild.runname).tgz' 
  ReleaseValuesFile: '$(Pipeline.Workspace)/fineractBuild/$(ApiName)/values.release.yaml' 
  ResourceGroupLocation: northcentralus

stages:
- stage: DNS
  # condition: startsWith(variables['resources.pipeline.fineractBuild.sourcebranch'], 'refs/heads/master')
  jobs:
  - deployment: DNS
    displayName: 'Set DNS Records - *.$(SubDomain).$(DnsZoneName)'
    environment: fineract-global
    strategy:
      runOnce:
        deploy:
          steps:
          - template: templates/SetDnsRecords.yml
            parameters:
              azureSubscription: '$(AzureSubscription)'
              clusterResourceGroup: '$(ClusterResourceGroup)'
              resourceGroupNameDNS: $(ResourceGroupNameDNS)
              resourceGroupLocation: $(ResourceGroupLocation)
              dnsZoneName: $(DnsZoneName)
              subDomain: $(SubDomain)

- stage: Dev
  dependsOn: DNS
  condition: succeeded('DNS')
  # condition: startsWith(variables['resources.pipeline.fineractBuild.sourcebranch'], 'refs/heads/master')
  variables:
    DeploymentEnvironment: 'dev'
    K8sNamespace: '$(ApiName)-$(DeploymentEnvironment)'
    URL: $(DeploymentEnvironment).$(SubDomain).$(DnsZoneName)
  jobs:
  - deployment: Web_dev
    displayName: 'Deploy fineract to the fineract-$(DeploymentEnvironment) environment'
    environment: fineract-dev
    strategy:
      runOnce:
        deploy:
          steps:
          - download: fineractBuild
            artifact: $(ApiName)

          - template: templates/DeployHelmPackage.yml
            parameters:
              azureSubscription: '$(AzureSubscription)'
              clusterResourceGroup: '$(ClusterResourceGroup)'
              kubernetesCluster: $(AksClusterName)
              helmVersion: $(HelmVersion)
              k8sNamespace: $(K8sNamespace)
              chartPackage: '$(ChartPackage)'              
              releaseValuesFile: '$(ReleaseValuesFile)' 
              apiName: $(ApiName)

- stage: Test
  dependsOn: 
  - DNS
  - Dev
  condition: and(succeeded('DNS'), succeeded('Dev'))
  # condition: startsWith(variables['resources.pipeline.fineractBuild.sourcebranch'], 'refs/heads/master')
  variables:
    DeploymentEnvironment: 'test'
    K8sNamespace: '$(ApiName)-$(DeploymentEnvironment)'
    URL: $(DeploymentEnvironment).$(SubDomain).$(DnsZoneName)
  jobs:
  - deployment: Web_test
    displayName: 'Deploy fineract to the fineract-$(DeploymentEnvironment) environment'
    environment: fineract-test
    strategy:
      runOnce:
        deploy:
          steps:
          - download: fineractBuild
            artifact: $(ApiName)

          - template: templates/DeployHelmPackage.yml
            parameters:
              azureSubscription: '$(AzureSubscription)'
              clusterResourceGroup: '$(ClusterResourceGroup)'
              kubernetesCluster: $(AksClusterName)
              helmVersion: $(HelmVersion)
              k8sNamespace: $(K8sNamespace)
              chartPackage: '$(ChartPackage)'              
              releaseValuesFile: '$(ReleaseValuesFile)' 
              apiName: $(ApiName)